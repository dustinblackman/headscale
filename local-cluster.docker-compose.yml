version: "3.8"
services:
  postgres:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U postgres'"]
      interval: 1s
      timeout: 5s
      retries: 10

  headscale:
    build:
      context: .
      dockerfile: ./tools/local-cluster/headscale-dev.Dockerfile
    command: /usr/bin/headscale-init
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "http://localhost:8080/health"]
      interval: 1s
      timeout: 5s
      retries: 100
    links:
      - postgres
    volumes:
      - node-keys:/node-keys
      - go-build:/root/.cache/go-build
      - go-mod:/go/pkg/mod
      - ./:/app
      - ./tools/local-cluster/config.yml:/etc/headscale/config.yml
      - ./tools/local-cluster/acl.json:/etc/headscale/acl.json
      - ./tools/local-cluster/headscale-init.sh:/usr/bin/headscale-init

  nginx:
    build:
      context: .
      dockerfile: ./tools/local-cluster/node.Dockerfile
    command: /usr/bin/nginx-init
    depends_on:
      headscale:
        condition: service_healthy
    links:
      - headscale
    healthcheck:
      test: ["CMD", "curl", "http://localhost:80/"]
      interval: 1s
      timeout: 5s
      retries: 100
    volumes:
      - node-keys:/node-keys
      - ./tools/local-cluster/nginx-init.sh:/usr/bin/nginx-init
      - ./tools/local-cluster/nginx.conf:/etc/nginx/nginx.conf:ro

  node-normal:
    build:
      context: .
      dockerfile: ./tools/local-cluster/node.Dockerfile
    command: /usr/bin/node-init
    depends_on:
      headscale:
        condition: service_healthy
      nginx:
        condition: service_healthy
    deploy:
      replicas: 2
    environment:
      KEY_PATH: /node-keys/machine-normal
    links:
      - headscale
    volumes:
      - node-keys:/node-keys
      - ./tools/local-cluster/node-init.sh:/usr/bin/node-init

  node-ephemeral:
    build:
      context: .
      dockerfile: ./tools/local-cluster/node.Dockerfile
    command: /usr/bin/node-init
    depends_on:
      headscale:
        condition: service_healthy
      nginx:
        condition: service_healthy
    deploy:
      replicas: 3
    environment:
      KEY_PATH: /node-keys/machine-ephemeral
    links:
      - headscale
    volumes:
      - node-keys:/node-keys
      - ./tools/local-cluster/node-init.sh:/usr/bin/node-init

volumes:
  go-build:
    driver: local
  go-mod:
    driver: local
  postgres:
    driver: local
  node-keys:
    driver: local
